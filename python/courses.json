{
  "courses": [
    {
      "id": "Advanced AWS Well-Architected Best Practices",
      "title": "Advanced AWS Well-Architected Best Practices",
      "level": "중급",
      "delivery_method": "Instructor-led Training (ILT)",
      "duration": "",
      "objectives": [
        "워크로드 정의 및 주요 개념",
        "AWS Well-Architected Framework 검토 단계, 프로세스, 모범 사례 및 안티 패턴",
        "고위험 및 중위험 파악",
        "AWS Well-Architected 워크플로에 대한 개선 우선순위 지정",
        "AWS Well-Architected Framework 백서, 실습, AWS 솔루션 라이브러리의 사전 구축된 솔루션, AWS Well-Architected Independent Software Vendor(ISV) 및 AWS Well-Architected 파트너 프로그램(WAPP) 찾기 및 활용"
      ],
      "target_audience": [
        "솔루션스 아키텍트",
        "클라우드 실무자",
        "데이터 엔지니어",
        "데이터 과학자",
        "개발자"
      ],
      "prerequisites": [
        "AWS Well-Architected Best Practices Intermediate - L200 과정 수강"
      ]
    },
    {
      "id": "Amazon SageMaker Studio for Data Scientists",
      "title": "Amazon SageMaker Studio for Data Scientists",
      "level": "",
      "delivery_method": "Instructor-led Training (ILT)",
      "duration": "",
      "objectives": [
        "Amazon SageMaker Studio를 사용하여 ML 솔루션 준비, 구축, 교육, 배포 및 모니터링 가속화"
      ],
      "target_audience": [],
      "prerequisites": []
    },
    {
      "id": "course1",
      "title": "AWS Security Essentials",
      "level": "중급",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "AWS 클라우드 사용에 따른 보안 이점 및 책임 파악",
        "AWS의 액세스 제어 및 액세스 관리 기능 설명",
        "데이터를 보호하는 다양한 방법 이해",
        "AWS 리소스에 대한 네트워크 액세스를 보호하는 방법 설명",
        "모니터링 및 인시던트 대응에 사용할 수 있는 AWS 서비스 식별"
      ],
      "target_audience": [
        "클라우드 보안 업무에 관심이 있는 IT 비즈니스 전문가",
        "AWS에 대한 최소한의 실무 지식을 갖춘 보안 전문가"
      ],
      "prerequisites": []
    },
    {
      "id": "course2",
      "title": "AWS Technical Essentials",
      "level": "초급",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "AWS 서비스 관련 용어와 개념의 설명",
        "AWS Management Console 사용법",
        "AWS의 보안 조치와 AWS Identity and Access Management(IAM) 관련 주요 개념의 설명",
        "Amazon Elastic Compute Cloud(Amazon EC2), AWS Lambda, Amazon Elastic Container Service(Amazon ECS), Amazon Elastic Kubernetes Service(Amazon EKS) 등의 여러 AWS 컴퓨팅 서비스 구분",
        "Amazon Relational Database Service(Amazon RDS), Amazon DynamoDB, Amazon Simple Storage Service(Amazon S3) 등의 AWS 데이터베이스 및 스토리지 서비스 파악",
        "AWS 네트워킹 서비스 살펴보기",
        "Amazon CloudWatch 모니터링 기능 액세스 및 구성"
      ],
      "target_audience": [
        "고객에게 AWS 서비스의 기술적인 이점을 설명해야 하는 직원",
        "AWS 사용을 시작하는 방법을 습득하려는 개별 사용자",
        "시스템 운영 관리자",
        "Solutions Architect",
        "개발자"
      ],
      "prerequisites": [
        "IT 분야 근무 경험",
        "일반적인 데이터 센터 아키텍처 및 구성 요소(서버, 네트워킹, 데이터베이스, 애플리케이션 등) 관련 기본 지식",
        "이전에 클라우드 컴퓨팅이나 AWS를 사용해 본 적은 없어도 됨"
      ]
    },
    {
      "id": "course3",
      "title": "AWS Well-Architected Best Practices",
      "level": "",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "AWS Well-Architected Framework의 기능, 설계 원칙, 설계 핵심 요소 및 일반적인 용도 파악",
        "Well-Architected Framework의 각 핵심 요소에 설계 원칙, 주요 서비스 및 모범 사례 적용",
        "AWS Well-Architected Tool을 사용하여 Well-Architected Review 수행"
      ],
      "target_audience": [
        "AWS 솔루션의 설계, 구축 및 실행에 관여하는 기술 전문가"
      ],
      "prerequisites": [
        "핵심 AWS 서비스에 대한 지식 (과정: AWS Cloud Practitioner Essentials)",
        "AWS 관리 인터페이스에 대한 지식 (과정: AWS Technical Essentials)",
        "핵심 AWS 설계 및 아키텍처에 대한 지식 (과정: Architecting on AWS)"
      ]
    },
    {
      "id": "course4",
      "title": "AWS Well-Architected Best Practices (Custom)",
      "level": "",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "Well-Architected Framework의 특징, 설계 원칙, 설계 핵심 요소 및 일반적인 용도 파악",
        "Well-Architected Framework의 각 핵심 요소에 설계 원칙, 주요 서비스 및 모범 사례 적용",
        "Well-Architected Tool을 사용하여 Well-Architected 검토 수행"
      ],
      "target_audience": [
        "AWS 솔루션의 설계, 구축 및 실행에 관여하는 기술 전문가"
      ],
      "prerequisites": [
        "핵심 AWS 서비스에 대한 지식 (과정: AWS Cloud Practitioner Essentials)",
        "AWS 관리 인터페이스에 대한 지식 (과정: AWS Technical Essentials)",
        "핵심 AWS 설계 및 아키텍처에 대한 지식 (과정: Architecting on AWS)"
      ]
    },
    {
      "id": "1",
      "title": "Building Data Analytics Solutions Using Amazon EMR",
      "level": "중급",
      "delivery_method": "강의실 교육",
      "duration": "",
      "objectives": [
        "데이터 웨어하우스, 데이터 레이크, 현대적 데이터 아키텍처의 기능 및 이점 비교",
        "배치 데이터 분석 솔루션 설계 및 구현",
        "압축을 포함한 적절한 기술을 파악하고 적용하여 데이터 스토리지 최적화",
        "데이터 흡수, 변환 및 저장을 위한 적절한 옵션 선택 및 배포",
        "특정 비즈니스 용례에 적합한 인스턴스 및 노드 유형, 클러스터, 오토스케일링 및 네트워크 토폴로지 선택",
        "데이터 저장 및 처리가 실행 가능한 비즈니스 인사이트 획득에 필요한 분석 및 시각화 메커니즘에 미치는 영향 이해",
        "저장 데이터 및 전송 데이터 보안",
        "분석 워크로드를 모니터링하여 문제 파악 및 해결",
        "비용 관리 모범 실무 적용"
      ],
      "target_audience": [
        "데이터 플랫폼 엔지니어",
        "데이터 분석 파이프라인을 구축하고 관리하는 아키텍트 및 운영자"
      ],
      "prerequisites": [
        "AWS Technical Essentials 또는 Architecting on AWS 이수",
        "Building Data Lakes on AWS 또는 Getting Started with AWS Glue 이수"
      ]
    },
    {
      "id": "2",
      "title": "Building Data Analytics Solutions Using Amazon Redshift",
      "level": "중급",
      "delivery_method": "강의실 교육",
      "duration": "",
      "objectives": [
        "데이터 웨어하우스, 데이터 레이크, 현대적 데이터 아키텍처의 기능 및 이점 비교",
        "데이터 웨어하우스 분석 솔루션 설계 및 구현",
        "압축을 포함한 적절한 기술을 식별하고 적용하여 데이터 스토리지 최적화",
        "데이터 흡수, 변환 및 저장을 위한 적절한 옵션 선택 및 배포",
        "특정 비즈니스 용례에 적합한 인스턴스 및 노드 유형, 클러스터, 오토 스케일링 및 네트워크 토폴로지 선택",
        "데이터 스토리지 및 처리가 실행 가능한 비즈니스 인사이트 획득에 필요한 분석 및 시각화 메커니즘에 미치는 영향 이해",
        "저장 데이터 및 전송 데이터 보안",
        "분석 워크로드를 모니터링하여 문제 식별 및 해결",
        "비용 관리 모범 실무 적용"
      ],
      "target_audience": [
        "데이터 웨어하우스 엔지니어",
        "데이터 플랫폼 엔지니어",
        "데이터 분석 파이프라인을 구축하고 관리하는 아키텍트 및 운영자"
      ],
      "prerequisites": [
        "AWS Technical Essentials 또는 Architecting on AWS 이수",
        "Building Data Lakes on AWS 이수"
      ]
    },
    {
      "id": "3",
      "title": "Building Data Lakes on AWS",
      "level": "중급",
      "delivery_method": "강의실 교육",
      "duration": "",
      "objectives": [
        "데이터 레이크 계획 및 설계에 데이터 레이크 방법론 적용",
        "AWS 데이터 레이크 구축에 필요한 구성 요소 및 서비스 설명",
        "적절한 권한을 바탕으로 데이터 레이크 보호",
        "데이터 레이크에 있는 데이터 수집, 저장, 변환",
        "데이터 레이크 내의 데이터 쿼리, 분석, 시각화"
      ],
      "target_audience": [
        "데이터 플랫폼 엔지니어",
        "솔루션스 아키텍트",
        "IT 전문가"
      ],
      "prerequisites": [
        "AWS Technical Essentials 강의실 교육 과정 수료",
        "데이터 분석 파이프라인 구축 경험 1년 이상 또는 Data Analytics Fundamentals 디지털 교육 과정 수료"
      ]
    },
    {
      "id": "4",
      "title": "Build Modern Applications with AWS NoSQL Databases",
      "level": "중급",
      "delivery_method": "강의실 교육",
      "duration": "",
      "objectives": [
        "AWS 목적별 NoSQL 데이터베이스를 사용하여 클라우드를 위한 현대적 애플리케이션 빌드",
        "키-값, 문서 및 메모리 내 데이터 범주를 처리하는 AWS 목적별 데이터베이스를 사용하는 솔루션 설명",
        "비즈니스 사용 사례를 분석하고 Amazon DynamoDB의 고급 기능을 적용하여 확장 가능 솔루션 구현",
        "비즈니스 사용 사례를 분석하고 Amazon ElastiCache의 고급 기능을 적용하여 확장 가능 솔루션 구현",
        "비즈니스 사용 사례를 분석하고 Amazon DocumentDB의 고급 기능을 적용하여 확장 가능 솔루션 구현",
        "변경 스트림 및 AWS Lambda를 사용하여 이벤트 중심 아키텍처 구현",
        "Amazon CodeWhisperer를 사용하여 더 빠르게 솔루션을 빌드하는 방법 알아보기"
      ],
      "target_audience": [
        "데이터베이스 개발자",
        "Solutions Architect",
        "데이터베이스 엔지니어"
      ],
      "prerequisites": [
        "클라우드 컴퓨팅 개념에 대한 지식",
        "관계형 또는 NoSQL 데이터베이스의 데이터 모델링에 대한 지식",
        "Amazon DynamoDB 테이블 디자인 실무 경험",
        "Amazon DocumentDB 테이블 디자인 실무 경험",
        "ElastiCache for Redis 실무 경험",
        "AWS Lambda 및 Amazon API Gateway 데이터베이스 서비스에 대한 지식",
        "Python 스크립팅에 대한 지식"
      ]
    },
    {
      "id": "course1",
      "title": "Developing Serverless Solutions on AWS",
      "level": "중급",
      "delivery_method": "강의실 교육",
      "duration": "3일",
      "objectives": [
        "적절한 AWS 서비스를 사용하여 서버리스 애플리케이션 설계에 이벤트 중심의 모범 사례를 적용합니다.",
        "서버리스 개발로 전환하는 데 따른 당면 과제와 절충점을 파악하고 개발 조직 및 환경에 적합한 권장 사항을 제시합니다.",
        "AWS Managed Services를 서로 연결하는 패턴을 사용하여 서버리스 애플리케이션을 구축하고, 서비스 할당량, 사용 가능한 통합, 호출 모델, 오류 처리, 이벤트 소스 페이로드를 비롯한 서비스 특성을 고려합니다.",
        "AWS CloudFormation, AWS Amplify, AWS Serverless Application Model(AWS SAM) 및 AWS Cloud Development Kit(AWS CDK)를 비롯하여 Infrastructure as Code를 작성하는 데 사용할 수 있는 옵션을 비교 및 대조합니다.",
        "오류 처리, 로깅, 환경 재사용, 계층 사용, 상태 비저장, 멱등성, 동시성 및 메모리 구성을 비롯한 모범 사례를 Lambda 함수 작성에 적용합니다.",
        "서버리스 애플리케이션에 관찰 가능성 및 모니터링을 구축하기 위한 모범 사례를 적용합니다.",
        "서버리스 애플리케이션에 보안 모범 사례를 적용합니다.",
        "서버리스 애플리케이션에서 규모 조정을 위한 주요 고려 사항을 식별하고, 각 고려 사항을 이를 관리하기 위한 메서드, 도구 또는 모범 사례와 연결합니다.",
        "AWS SAM, AWS CDK 및 AWS 개발자 도구를 사용하여 CI/CD 워크플로를 구성하고 서버리스 애플리케이션의 배포를 자동화합니다.",
        "지속적인 서버리스 개발 및 서버리스 커뮤니티 참여에 도움이 되는 서버리스 리소스 목록을 만들고 적극적으로 유지 관리합니다."
      ],
      "target_audience": [
        "서버리스에 어느 정도 익숙하고 AWS 클라우드에서 개발한 경험이 있는 개발자"
      ],
      "prerequisites": [
        "AWS 클라우드 아키텍처의 기본 사항에 대한 지식",
        "‘Developing on AWS’ 강의실 교육 과정 이수에 상응하는 AWS 기반 애플리케이션 개발에 대한 이해",
        "‘AWS Lambda Foundations’ 및 ‘Amazon API Gateway for Serverless Applications’ 서버리스 디지털 교육 과정 이수에 상응하는 지식"
      ]
    },
    {
      "id": "course2",
      "title": "DevOps Engineering on AWS",
      "level": "중급",
      "delivery_method": "강의실 교육",
      "duration": "3일",
      "objectives": [
        "1개 이상의 DevOps 개발 프로젝트를 지원하는 AWS 기반 인프라를 설계 및 구현",
        "AWS에 Git을 설정하고 AWS 클라우드에서 지속적 통합 환경을 구현하기 위한 다양한 옵션을 이해",
        "지속적 통합 및 지속적 배포의 핵심 원리 사용",
        "AWS 클라우드에서 제공하는 다양한 애플리케이션 배포 기술(AWS CodeDeploy, AWS OpsWorks, AWS Elastic Beanstalk, Amazon EC2 Container Service 등)을 구분하고 주어진 시나리오에 가장 적합한 기술을 결정",
        "AWS에 배포하는 애플리케이션을 세부적으로 튜닝하여 성능을 높이고, 잠재적 문제를 찾기 위해 AWS 도구 및 기술을 사용하여 애플리케이션 및 환경을 모니터링"
      ],
      "target_audience": [
        "소프트웨어 개발자 및 시스템 관리자"
      ],
      "prerequisites": [
        "System Operations on AWS 또는 Developing on AWS 강의실 교육 과정 수강",
        "1개 이상의 고급 프로그래밍 언어(C#, Java, PHP, Ruby, Python 등)에 대한 실무 지식",
        "명령줄 수준에서 Linux 또는 Windows 시스템을 관리할 수 있는 중급 수준의 지식",
        "AWS Management Console 및 AWS 명령줄 인터페이스(AWS CLI)를 사용한 AWS 실무 경험"
      ]
    },
    {
      "id": "course3",
      "title": "Generative AI Essentials on AWS",
      "level": "초급",
      "delivery_method": "디지털 교육",
      "duration": "",
      "objectives": [
        "생성형 AI의 개념, 방법, 전략 요약",
        "생성형 AI 및 기계 학습과 해당 기술의 적절한 사용에 대한 논의",
        "생성형 AI를 책임감 있고 안전하게 사용하는 방법 설명",
        "특정 사용 사례를 통해 생성형 AI 솔루션의 유형 파악",
        "조직에 생성형 AI의 구현 및 프로젝트 계획 설명"
      ],
      "target_audience": [
        "비즈니스 분석가",
        "IT 지원가",
        "마케팅 전문가",
        "제품 또는 프로젝트 관리자",
        "사업부 또는 IT 관리자",
        "영업 전문가"
      ],
      "prerequisites": []
    },
    {
      "id": "1",
      "title": "Digital Classroom - Architecting on AWS",
      "level": "중급",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "IP 주소 지정에 대한 지식",
        "멀티 티어 아키텍처에 대한 실무 지식",
        "클라우드 컴퓨팅 개념 이해"
      ],
      "target_audience": [],
      "prerequisites": []
    },
    {
      "id": "2",
      "title": "Digital Classroom - AWS Security Best Practices",
      "level": "중급",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "보안 네트워크 인프라 설계 및 구현",
        "컴퓨팅 보안 설계 및 구현",
        "로깅 솔루션 설계 및 구현"
      ],
      "target_audience": [
        "솔루션 아키텍트 및 보안 엔지니어"
      ],
      "prerequisites": [
        "보안 기초 습득",
        "Security Essentials 습득",
        "네트워킹, 운영 체제, 데이터 암호화 및 운영 제어 분야의 정보 보안 개념, 기술 및 패러다임에 대한 충분한 배경 지식"
      ]
    },
    {
      "id": "3",
      "title": "Digital Classroom – AWS Security Essentials",
      "level": "초급",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "AWS 클라우드 사용에 따른 보안 이점 및 책임 파악",
        "AWS의 액세스 제어 및 액세스 관리 기능 설명",
        "AWS에 데이터 저장 시 전송 데이터 및 저장 데이터 암호화를 제공하는 데 사용할 수 있는 방법 설명",
        "AWS 리소스에 대한 네트워크 액세스를 보호하는 방법 설명",
        "모니터링 및 인시던트 대응에 사용할 수 있는 AWS 서비스 식별"
      ],
      "target_audience": [
        "클라우드 보안 업무에 관심이 있는 보안 IT 비즈니스 전문가",
        "AWS에 대한 최소한의 실무 지식을 갖춘 보안 전문가"
      ],
      "prerequisites": [
        "IT 보안 사례 및 인프라 개념에 대한 실무 지식, 클라우드 컴퓨팅 개념에 대한 이해"
      ]
    },
    {
      "id": "4",
      "title": "Digital Classroom - AWS Well-Architected Best Practices",
      "level": "중급",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "Well-Architected Framework의 기능, 설계 원칙, 설계 핵심 요소, 일반적인 용도 파악",
        "Well-Architected Framework의 각 핵심 요소에 설계 원칙, 주요 서비스 및 모범 사례 적용",
        "Well-Architected Tool을 사용하여 Well-Architected 검토 수행"
      ],
      "target_audience": [
        "AWS 솔루션 설계, 구축, 운영에 관련된 기술 전문가"
      ],
      "prerequisites": [
        "AWS 관리 인터페이스에 대한 지식(과정명: AWS Technical Essentials)",
        "핵심 AWS 설계 및 아키텍처에 대한 지식(과정명: Architecting on AWS)"
      ]
    },
    {
      "id": "5",
      "title": "Digital Classroom – AWS Cloud Technical Essentials",
      "level": "초급",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "AWS 서비스 관련 용어와 개념을 알아봅니다.",
        "AWS Management Console을 탐색합니다.",
        "AWS의 보안 조치와 AWS Identity and Access Management(AWS IAM) 관련 주요 개념을 파악합니다.",
        "Amazon Elastic Compute Cloud(Amazon EC2), AWS Lambda, Amazon Elastic Container Service(Amazon ECS), Amazon Elastic Kubernetes Service(Amazon EKS) 등 몇 가지 AWS 컴퓨팅 서비스의 특징을 알아봅니다.",
        "Amazon Relational Database Service(RDS), Amazon DynamoDB, Amazon Simple Storage Service(S3) 등의 AWS 데이터베이스 및 스토리지 서비스를 파악합니다.",
        "AWS 네트워킹 서비스를 살펴봅니다.",
        "Amazon CloudWatch 모니터링 기능 액세스 및 구성을 이해합니다."
      ],
      "target_audience": [
        "고객에게 AWS 서비스의 기술적인 이점에 대한 소개를 담당하고 있는 직원",
        "AWS 사용을 시작하는 방법을 습득하려는 개별 사용자",
        "시스템 운영 관리자, 솔루션스 아키텍트, 개발자"
      ],
      "prerequisites": [
        "IT 분야 관련 경험",
        "일반적인 데이터 센터 아키텍처 및 구성 요소 관련 기본 지식(서버, 네트워킹, 데이터베이스, 애플리케이션)",
        "클라우드 컴퓨팅 또는 AWS 사용 경험이 없어도 무방함"
      ]
    },
    {
      "id": "1",
      "title": "Digital Classroom – Cloud Operations on AWS",
      "level": "중급",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "Well-Architected Framework의 핵심 요소인 운영 우수성의 여러 단계를 지원하는 AWS 서비스 파악",
        "AWS 계정 및 조직과 AWS Identity and Access Management(IAM)를 사용해 AWS 리소스에 대한 액세스 관리",
        "AWS Systems Manager, AWS CloudTrail, AWS Config 등 AWS 서비스를 사용하여 사용 중인 AWS 리소스의 인벤토리 유지 관리",
        "메타데이터 태그, Amazon Machine Image(AMI), AWS Control Tower를 사용하여 AWS 클라우드 환경을 배포 및 유지 관리하는 리소스 배포 전략 개발",
        "AWS CloudFormation, AWS Service Catalog 같은 AWS 서비스를 사용해 리소스 배포 자동화",
        "AWS 서비스를 사용해 배포, 패치 같은 CloudOps 수명 주기 프로세스를 통한 AWS 리소스 관리",
        "Amazon Route 53, Elastic Load Balancing과 같은 AWS 서비스를 사용해 지연 시간과 성능을 최적화하여 트래픽을 라우팅할 수 있는 고가용성 클라우드 환경 구성",
        "AWS Auto Scaling 및 Amazon EC2 Auto Scaling 구성을 통한 수요 기반 클라우드 환경 확장",
        "Amazon CloudWatch를 비롯한 관련 기능(경보, 대시보드, 위젯 등)을 사용한 클라우드 환경 모니터링",
        "AWS CloudTrail 및 AWS Config 등 AWS 서비스를 사용하여 클라우드 환경에서 권한 관리 및 활동 추적",
        "Amazon Virtual Private Cloud(Amazon VPC)에 대한 리소스 배포, Amazon VPC에 대해 필요한 연결 구성, 서비스 중단에서 리소스 보호",
        "AWS 클라우드 환경에서 탑재 가능한 스토리지의 용도, 이점, 적절한 사용 사례 명시",
        "Amazon Simple Storage Service(Amazon S3), Amazon S3 Glacier를 포함해 AWS 클라우드의 객체 스토리지에 대한 운영 특성 설명",
        "AWS Cost Explorer, AWS Cost and Usage Report 같은 서비스를 사용해 클라우드 비용을 수집하고, 최적화하고, 예측할 수 있는 포괄적 비용 모델 구축"
      ],
      "target_audience": [
        "AWS 클라우드에서 작업하는 시스템 관리자 및 운영자",
        "시스템 운영에 대한 지식을 쌓고 싶은 IT 업계 종사자"
      ],
      "prerequisites": [
        "AWS Technical Essentials 과정을 성공적으로 이수",
        "소프트웨어 개발 또는 시스템 관리와 관련된 경력",
        "Linux 환경의 셸 스크립팅, Windows의 cmd/PowerShell 같은 명령줄에서 운영 체제를 유지 관리할 수 있는 능력",
        "네트워킹 프로토콜(TCP/IP, HTTP)에 대한 기본 지식"
      ]
    },
    {
      "id": "2",
      "title": "Digital Classroom - Developing Generative AI Applications on AWS",
      "level": "",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [
        "생성형 AI의 중요성을 정의하고 잠재적인 위험과 이점을 설명합니다.",
        "생성형 AI와 관련된 기술적 기본 사항 및 용어에 대해 설명합니다.",
        "Amazon Bedrock의 이점과 사용 사례를 인식합니다.",
        "파운데이션 모델의 기본 기능, 유형 및 다양한 사용 사례에 대해 설명합니다.",
        "프롬프트 엔지니어링을 정의하고 FM과의 상호 작용 시 일반적인 모범 사례를 적용합니다.",
        "Amazon Bedrock 파운데이션 모델, 추론 파라미터, 주요 Amazon Bedrock API에 대해 설명합니다.",
        "유용한 생성형 AI 애플리케이션을 구축하는 데 사용되는 Amazon Bedrock으로 구현할 수 있는 아키텍처 패턴을 설명합니다.",
        "LangChain을 대규모 언어 모델(LLM), 프롬프트 템플릿, 체인, 채팅 모델, 텍스트 임베딩 모델, 문서 로더, 검색기, Amazon Bedrock용 에이전트와 통합하는 방법을 설명합니다.",
        "다양한 Amazon Bedrock 모델, LangChain 및 검색 증강 생성(RAG) 접근 방식을 사용하는 샘플 사용 사례를 구축하고 테스트합니다."
      ],
      "target_audience": [
        "미세 조정 없이 대규모 언어 모델을 활용하는 데 관심이 있는 소프트웨어 개발자"
      ],
      "prerequisites": [
        "AWS Technical Essentials 과정 이수",
        "Python에 대한 중간 수준의 숙련도"
      ]
    },
    {
      "id": "3",
      "title": "Digital Classroom – Developing on AWS",
      "level": "",
      "delivery_method": "온라인 강의",
      "duration": "",
      "objectives": [],
      "target_audience": [
        "소프트웨어 개발자",
        "솔루션스 아키텍트",
        "AWS 서비스를 사용하여 개발 역량을 높이려는 숙련된 기술 전문가"
      ],
      "prerequisites": []
    },
    {
      "id": "course1",
      "title": "AWS Cloud Practitioner Essentials",
      "level": "초급",
      "delivery_method": "",
      "duration": "",
      "objectives": [],
      "target_audience": [],
      "prerequisites": []
    },
    {
      "id": "course2",
      "title": "AWS Technical Essentials",
      "level": "중급",
      "delivery_method": "",
      "duration": "",
      "objectives": [],
      "target_audience": [],
      "prerequisites": []
    },
    {
      "id": "course3",
      "title": "Digital Classroom - Developing Serverless Solutions on AWS",
      "level": "",
      "delivery_method": "",
      "duration": "",
      "objectives": [],
      "target_audience": [],
      "prerequisites": []
    },
    {
      "id": "course4",
      "title": "Digital Classroom – DevOps Engineering on AWS",
      "level": "고급",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "소규모 DevOps 팀의 장점 나열",
        "일반적인 소규모 DevOps 팀 구성원의 역할과 책임 나열",
        "AWS Cloud9을 활용하여 코드를 작성, 실행, 디버깅하고 클라우드 기반 IDE를 개발 팀과 공유",
        "테스트 및 보안을 포함한 지속적 통합/지속적 전달(CI/CD) 파이프라인 구축",
        "Git 분기 전략을 개발하고 다양한 환경의 CI/CD 파이프라인과 통합",
        "AWS CloudFormation을 사용하여 소프트웨어 개발 프로젝트를 위한 개발, 테스트, 프로덕션 환경 배포",
        "AWS에서 DevOps 개발 프로젝트를 지원하는 인프라 설계 및 구현",
        "AWS CloudFormation 템플릿용 CI/CD 파이프라인 구축",
        "개발 및 운영의 워크플로와 책임을 종합하여 협업 확립",
        "AWS CodeCommit을 사용하여 안전하고 확장성이 뛰어난 프라이빗 Git 리포지토리 호스팅",
        "Amazon Elastic Container Registry(Amazon ECR)를 활용하여 Docker 컨테이너 이미지를 안전하게 저장하고 AWS CodeBuild 및 Amazon Elastic Container Service(Amazon ECS)와 통합",
        "AWS CodeBuild를 사용하여 코드 빌드, 테스트, 패키징 자동화",
        "CI/CD 파이프라인 도구 및 서비스에 보안 통합",
        "'한 번에 모두', '롤링', '블루/그린'과 같은 공통 배포 전략 구현",
        "AWS CodeDeploy를 사용하여 Amazon Elastic Compute Cloud(Amazon EC2), 온프레미스 컴퓨팅, AWS ECS(Amazon EC2/AWS Fargate), AWS Lambda에 대한 소프트웨어 배포 자동화",
        "AWS CodePipeline을 사용하여 릴리스 파이프라인(빌드, 테스트, 배포) 자동화",
        "AWS 도구 및 기술을 사용하여 애플리케이션 및 환경 모니터링"
      ],
      "target_audience": [
        "개발자",
        "DevOps 엔지니어",
        "SysOps 엔지니어",
        "DevOps 아키텍트",
        "시스템 관리자"
      ],
      "prerequisites": [
        "이전에 System Operations on AWS 또는 Developing on AWS 과정 수강",
        "1개 이상의 고급 프로그래밍 언어(C#, Java, PHP, Ruby, Python 등)에 대한 실무 지식",
        "명령줄 수준에서 Linux 또는 Windows 시스템을 관리할 수 있는 중급 수준의 지식",
        "2년 이상 AWS 환경을 프로비저닝, 운영 및 관리한 경험"
      ]
    },
    {
      "id": "course5",
      "title": "Digital Classroom - Generative AI for Executives",
      "level": "",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "생성형 AI의 잠재적 비즈니스 가치 인식",
        "당장 구현할 수 있는 실제 사용 사례 식별",
        "안전하고 책임감 있게 AI 사용",
        "성공에 필요한 사람, 프로세스, 기술 관리",
        "생성형 AI를 시작하기 위해 취할 수 있는 구체적인 조치 파악"
      ],
      "target_audience": [
        "경영진과 고위 비즈니스 리더"
      ],
      "prerequisites": []
    },
    {
      "id": "course6",
      "title": "Digital Classroom - Planning and Designing Databases on AWS",
      "level": "",
      "delivery_method": "",
      "duration": "",
      "objectives": [
        "데이터베이스 솔루션 설계를 위한 AWS Well-Architected Framework 요약",
        "주어진 워크로드에 적합한 목적별 데이터베이스 서비스 선택",
        "비즈니스 문제를 해결하기 위해 관계형 데이터베이스 솔루션 설계",
        "비즈니스 문제를 해결하기 위해 NoSQL 데이터베이스 솔루션 설계",
        "비즈니스 문제를 해결하기 위해 여러 데이터베이스의 데이터를 분석",
        "데이터베이스 솔루션의 보안 고려 사항"
      ],
      "target_audience": [
        "솔루션스 아키텍트",
        "데이터베이스 아키텍트",
        "개발자"
      ],
      "prerequisites": [
        "AWS 데이터베이스 서비스에 대한 지식",
        "관계형 또는 비관계형 데이터베이스의 데이터베이스 설계 개념 및/또는 데이터 모델링에 대한 이해",
        "클라우드 컴퓨팅 개념에 대한 지식",
        "일반적인 네트워킹 및 암호화 개념에 대한 지식",
        "Introduction to Building with AWS Databases 디지털 교육 과정 이수"
      ]
    },
    {
      "id": "eks-course",
      "title": "Running Containers on Amazon Elastic Kubernetes Service (Amazon EKS)",
      "level": "중급",
      "delivery_method": "Digital Classroom",
      "duration": "제공 예정 – 2025년",
      "objectives": [
        "Amazon EKS를 사용한 Kubernetes의 컨테이너 관리 및 오케스트레이션에 대해 학습합니다.",
        "Amazon EKS 클러스터를 구축하고, 환경을 구성하고, 클러스터를 배포한 후 클러스터에 애플리케이션을 추가해봅니다.",
        "Amazon Elastic Container Registry(Amazon ECR)를 사용하여 컨테이너 이미지를 관리하고 애플리케이션 배포를 자동화하는 방법을 배우게 됩니다.",
        "지속적 통합(CI) 및 지속적 전달(CD) 도구를 사용하여 애플리케이션을 배포합니다.",
        "지표, 기록, 추적, 수평/수직 확장을 이용하여 환경을 모니터링하고 크기를 조정하는 방법을 배우게 됩니다.",
        "효율성, 비용, 복원력을 고려한 설계를 통해 대규모 컨테이너 환경을 설계하고 관리하는 방법을 배우게 됩니다.",
        "클러스터를 지원하도록 AWS 네트워킹 서비스를 구성하고 Amazon EKS 환경을 보호하는 방법을 배우게 됩니다."
      ],
      "target_audience": [],
      "prerequisites": []
    },
    {
      "id": "security-engineering-course",
      "title": "Security Engineering on AWS",
      "level": "중급",
      "delivery_method": "Digital Classroom",
      "duration": "",
      "objectives": [
        "CIA(기밀성, 무결성 및 가용성) 3요소를 기반으로 AWS 클라우드 보안을 이해합니다.",
        "AWS Identity and Access Management(AWS IAM)로 인증 및 권한 부여를 생성 및 분석합니다.",
        "적절한 AWS 서비스와 함께 AWS에서 계정을 관리하고 프로비저닝합니다.",
        "AWS 서비스를 사용하여 비밀을 관리하는 방법을 파악합니다.",
        "암호화 및 액세스 제어를 통해 민감한 정보를 모니터링하고 데이터를 보호합니다.",
        "외부 소스의 공격에 대처하는 AWS 서비스를 파악합니다.",
        "로그를 모니터링, 생성 및 수집합니다.",
        "보안 인시던트의 지표를 식별합니다.",
        "서비스를 사용하여 위협을 조사하고 완화하는 방법을 파악합니다."
      ],
      "target_audience": [
        "보안 엔지니어",
        "보안 아키텍트",
        "클라우드 아키텍트"
      ],
      "prerequisites": [
        "AWS Security Essentials 또는 AWS Security Fundamentals, 제2판 수료",
        "Architecting on AWS 수료",
        "IT 보안 사례 및 인프라 개념에 대한 실무 지식",
        "AWS 클라우드에 대한 지식"
      ]
    },
    {
      "id": "machine-learning-course",
      "title": "The Machine Learning Pipeline on AWS",
      "level": "중급",
      "delivery_method": "Digital Classroom",
      "duration": "제공 예정 – 2025년",
      "objectives": [
        "프로젝트 기반 학습 환경에서 머신러닝(ML) 파이프라인을 사용하여 실제 비즈니스 문제를 해결하는 방법을 살펴봅니다.",
        "파이프라인의 각 단계에 대해 학습한 다음 해당 지식을 적용하여 사기 탐지 또는 항공편 지연이라는 두 가지 비즈니스 문제 중 하나를 해결하는 프로젝트를 완료합니다.",
        "과정을 마치면 수강생은 선택한 비즈니스 문제를 해결하는 Amazon SageMaker를 사용하여 ML 모델을 성공적으로 구축, 교육, 평가, 조정 및 배포할 수 있게 됩니다."
      ],
      "target_audience": [],
      "prerequisites": [
        "통계와 Python에 대한 기본 지식이 있으면 도움이 됩니다."
      ]
    }
  ]
}