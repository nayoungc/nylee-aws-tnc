schema {
  query: Query
}

#  CourseCatalog 모델 정의
type CourseCatalog {
  course_id: String
  course_name: String
  createdAt: AWSDateTime
  delivery_method: String
  description: String
  duration: String
  id: ID!
  level: String
  objectives: [String]
  target_audience: String
  updatedAt: AWSDateTime
}

#  Connection 타입 정의 (페이지네이션 용)
type CourseCatalogConnection {
  items: [CourseCatalog]
  nextToken: String
}

#  Customer 모델 정의
type Customer {
  createdAt: AWSDateTime
  id: ID!
  name: String
  updatedAt: AWSDateTime
}

type CustomerConnection {
  items: [Customer]
  nextToken: String
}

#  Instructor 모델 정의
type Instructor {
  cognitoId: String
  createdAt: AWSDateTime
  email: String
  id: ID!
  name: String
  profile: String
  status: String
  updatedAt: AWSDateTime
}

type InstructorConnection {
  items: [Instructor]
  nextToken: String
}

#  Query 타입 수정 - 기존 쿼리에 추가
type Query {
  getCourseCatalog(id: ID!): CourseCatalog
  getCustomer(id: ID!): Customer
  getInstructor(id: ID!): Instructor
  #  CourseCatalog 쿼리
  listCourseCatalogs(limit: Int, nextToken: String): CourseCatalogConnection
  #  Customer 쿼리
  listCustomers(filter: ModelCustomerFilterInput, limit: Int, nextToken: String): CustomerConnection
  #  Instructor 쿼리
  listInstructors(filter: ModelInstructorFilterInput, limit: Int, nextToken: String): InstructorConnection
}

#  필터 입력 타입 정의
input ModelCustomerFilterInput {
  and: [ModelCustomerFilterInput]
  id: ID
  name: String
  not: ModelCustomerFilterInput
  or: [ModelCustomerFilterInput]
}

input ModelInstructorFilterInput {
  and: [ModelInstructorFilterInput]
  email: String
  id: ID
  name: String
  not: ModelInstructorFilterInput
  or: [ModelInstructorFilterInput]
  status: String
}
